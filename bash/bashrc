# ~/.bashrc: executed by bash(1) for non-login shells.

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

#ignore duplicate history entries
export HISTCONTROL=ignoredups:erasedups

#path variable
export PATH="/usr/local/bin:/usr/local/sbin:/sbin:/usr/sbin:$PATH"

local_bin="$HOME/.bin"
if [ -x ${local_bin} ]; then
	echo "Loaded local binary folder (~/.bin)"
	export PATH="$PATH:${local_bin}"
fi

scripts="$HOME/src/scripts/bin"
if [ -x ${scripts} ]; then
	echo "Loaded scripts from git repo (~/src/scripts/bin)"
	export PATH="$PATH:${scripts}"
fi

# package building vars
export DEBFULLNAME='Nathan Overall'
export DEBEMAIL='packages@shweppsie.com'
export PBUILDFOLDER='/scratch/pbuilder/'

# append to the history file, don't overwrite it
shopt -s histappend

# size of history
export HISTSIZE=10000;

# save history after every command
PROMPT_COMMAND="history -n; history -w; history -c; history -r; $PROMPT_COMMAND"

# check the window size after each command and, if necessary, update the values of LINES and COLUMNS.
shopt -s checkwinsize

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

PS1='${debian_chroot:+($debian_chroot)}\[\033[36m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOSTNAME}: ${PWD}\007"'
    ;;
*)
    ;;
esac

# colorize hostname and user
if [ "$PS1" ]; then
    if [ "$BASH" ]; then
		if [[ "$OSTYPE" == darwin* ]]; then
			HOSTNAME=${HOSTNAME%%.*}
		fi

        shortname=${HOSTNAME%%.*}
        hostname_crc=$(echo $HOSTNAME | tr 'A-Z' 'a-z' | cksum)
        hostname_crc=${hostname_crc%% *}
        hostcolor=$(( 0x${hostname_crc} % 256 ))

		PS1=""
		if [ "$USER" != "nathan" -a "$USER" != "Nathan" ]; then
			PS1="$PS1\[\e[49;31m\]\u\[\e[0m\]@";
		fi

		PS1="$PS1\[\e[38;5;${hostcolor}m\]${HOSTNAME}:\[\e[01;34m\]\w\[\e[00m\]"

		vcprompt="$HOME/.bin/vcprompt"
		vcpromptargs="--format '%s:%b%m%a%u'"

		if [ -x "$vcprompt" ]; then
			vcprompt="$vcprompt $vcpromptargs"
			PS1="$PS1:\[\e[38;5;1m\]\$($vcprompt)\[\e[00m\]\$ "
		fi
        PS2='\[\e[31;1m\]continue->\[\e[0m\]'

        unset shortname hostname_crc hostcolor_a hostcolor_b
    else
        if [ "`id -u`" -eq 0 ]; then
            PS1='# '
        else
			PS1='$ '
        fi
    fi
fi

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    eval "`dircolors -b`"
    alias ls='ls --color=auto'
    alias dir='dir --color=auto'
    alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# aliases to make life easier
alias wodim='wodim -v'
alias mem="ps -eo rss,pid,args | awk '{ \$1 = int(\$1/1024); if(\$1 > 0){ printf \"%4d \", \$1; printf \"%-6d\", \$2; for (i=3; i<=NF; i++) printf \"%s \", \$i; printf \"\n\"; }}' | sort -n | cut -c -50"
alias l='ls -1'
alias ll='ls -l'
alias la='ls -a'
alias lla='ls -la'
alias diff='diff -u'
alias mv='mv -i'

alias gi='git commit --interactive'

# disable colour on ipcalc
alias ipcalc='ipcalc -n'

# change lxc path
export lxc_path=/lxc

# makes keys expire
alias ssh-add='ssh-add -t 43200'
# only load my old key for 5 minutes so I fix this
alias ssh-add-old='ssh-add -t 300 ~/.ssh/dsa'

# create ssh agent if it's not running and this is a local shell
if [ -z "${SSH_CLIENT+x}" ] && [ -z "${SSH_TTY+x}" ]
then
	# not an ssh session
	export SSH_AUTH_SOCK=~/.ssh/ssh-agent.$HOSTNAME.sock
	ssh-add -l 2>/dev/null >/dev/null
	if [ $? -ge 2 ]; then
		rm "$SSH_AUTH_SOCK"
	    echo "Starting SSH Agent"
		ssh-agent -a "$SSH_AUTH_SOCK" >/dev/null
	fi
fi

# set default umask
umask 022

# load local bashrc overrides if it exists
if [ -f "$HOME/.bashrc.local" ]; then
	echo -n "Loading local bashrc..."
    . "$HOME/.bashrc.local"
	echo "done"
fi
