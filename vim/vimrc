" detect the filetype
filetype on

" if a file has a modeline, use it
set modeline

" yes I like 8 space tabs, get over it
set tabstop=8
set softtabstop=8
set shiftwidth=8
set noexpandtab

" syntax highlighting is a beautiful thing
syntax on

" oh god my eyes!
set background=dark

" wrap lines bigger than the terminal and wrapped section of lines begin with >>
set nowrap linebreak nolist
set showbreak=...

set incsearch		" search as each character is typed
set showmode		" show when mode changes
set showmatch		" Show matching brackets.
set ignorecase		" Do case insensitive matching
set smartcase		" Do smart case matching

" persistent undo
set undodir=~/.vim/undodir
set undofile
set undolevels=1000 "maximum number of changes that can be undone
set undoreload=10000 "maximum number lines to save for undo on a buffer reload

" if a filetype has a special indentation plugin, load it
filetype plugin indent on

" give a useful title
set title
set titlestring=%t%(\ %M%)%(\ (%{expand(\"%:p:h\")})%)%(\ %a%)\ -\ %{v:servername}

" Press F6 to toggle linewrap indicator
function! ShowBreak()
	if &showbreak == ''
		set showbreak=...
	else
		set showbreak=
	endif
endfunction
nmap <F6> :call ShowBreak()<CR> :set linebreak! showbreak?<CR>

" Press F5 to toggle wrapping
noremap <F5> :set nowrap! nowrap?<CR>

" F4 to toggle highlighting on/off
noremap <F4> :set hlsearch! hlsearch?<CR>

" F12 to avoid fucked up pasting
nnoremap <F12> :set invpaste paste?<CR>
set pastetoggle=<F12>

" jump to the last position when reopening a file
if has("autocmd")
  au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
endif

" load indentation rules and plugins according to the detected filetype.
if has("autocmd")
  filetype plugin indent on
endif

" maps :W to write file as the root user using sudo
"cmap W w !sudo tee % >/dev/null<CR>:e!<CR><CR>
