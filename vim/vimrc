" detect the filetype
filetype on

" if a file has a modeline, use it
set modeline

" yes I like 8 space tabs, get over it
set tabstop=8
set softtabstop=8
set shiftwidth=8
set noexpandtab
set smartindent

" syntax highlighting is a beautiful thing
syntax on

" oh god my eyes!
set background=dark

" wrap lines bigger than the terminal and wrapped section of lines begin with >>
set nowrap linebreak nolist
set showbreak=...

" various other options
set incsearch		" search as each character is typed
set showmode		" show when mode changes
set showmatch		" show matching brackets.
set ignorecase		" do case insensitive matching
set smartcase		" do smart case matching
set autoread		" auto read when a file is changed from the outside
set number		" normal line numbers

" relative line numbers
try
	set relativenumber
catch
endtry

" persistent undo
try
	set undodir=~/.vim/undodir
	set undofile
	set undolevels=1000 "maximum number of changes that can be undone
	set undoreload=10000 "maximum number lines to save for undo on a buffer reload
catch
endtry

" if a filetype has a special indentation plugin, load it
filetype plugin indent on

" give a useful title
set title
set titlestring=%t%(\ %M%)%(\ (%{expand(\"%:p:h\")})%)%(\ %a%)\ -\ %{v:servername}

" linewrapping and indicator
function! ShowBreak()
	if &wrap == "nowrap"
		" enable wrapping only
		set wrap
		set nolinebreak
		set showbreak=
	elseif &showbreak == ''
		" also indicate indicate wrapped lines
		set wrap
		set nolinebreak
		set showbreak=...
	elseif &linebreak == "nolinebreak"
		" also do wrapping at spaces
		set wrap
		set linebreak
		set showbreak=...
	else
		" disable all wrapping options
		set nowrap
		set nolinebreak
		set showbreak=
	endif
endfunction

" map F3 to toggle spellcheck
map <F3> :setlocal spell! spelllang=en_us<CR>

" map F4 to toggle highlighting on/off
map <F4> :set hlsearch! hlsearch?<CR>

" map F5 to toggle line wrapping
map <F5> :set nowrap! nowrap?<CR>

" map F6 to toggle line wrapping indicator
map <F6> :call ShowBreak()<CR>

" map F7 to toggle sequential line numbers
map <F7> :set number! number?<CR>

" map F8 to toggle relative line numbers
map <F8> :set relativenumber! relativenumber?<CR>

" map F11 to retab file
map <F9> :retab!<CR>

" map F12 to avoid fucked up pasting
map <F12> :set invpaste paste?<CR>
set pastetoggle=<F12>

" map :sw to write file using sudo
cmap sw w !sudo tee % >/dev/null<CR>:e!<CR><CR>

" jump to the last position when reopening a file
if has("autocmd")
  au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
endif

" load indentation rules and plugins according to the detected filetype.
if has("autocmd")
  filetype plugin indent on
endif

" maps :W to write file as the root user using sudo
"cmap W w !sudo tee % >/dev/null<CR>:e!<CR><CR>

let g:atp_Compiler='bash'
